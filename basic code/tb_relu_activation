`timescale 1ns / 1ps

module tb_relu_activation;

    // Inputs
    reg clk;
    reg rst_n;
    reg [31:0] data_in;

    // Outputs
    wire [31:0] data_out;

    // Instantiate the ReLU Activation Module
    relu_activation uut (
        .clk(clk),
        .rst_n(rst_n),
        .data_in(data_in),
        .data_out(data_out)
    );

    // Clock generation
    always #5 clk = ~clk; // 10ns period

    initial begin
        // Initialize Inputs
        clk = 0;
        rst_n = 0;
        data_in = 32'b0;

        // Apply reset
        #10;
        rst_n = 1;

        // Test case 1: Positive number
        #10;
        data_in = 32'h3F800000; // 1.0 in IEEE 754
        #10;
        $display("Test 1 - Positive Input: %h, Output: %h", data_in, data_out);

        // Test case 2: Negative number
        #10;
        data_in = 32'hBF800000; // -1.0 in IEEE 754
        #10;
        $display("Test 2 - Negative Input: %h, Output: %h", data_in, data_out);

        // Test case 3: Zero
        #10;
        data_in = 32'h00000000; // 0.0 in IEEE 754
        #10;
        $display("Test 3 - Zero Input: %h, Output: %h", data_in, data_out);

        // Test case 4: Small positive number
        #10;
        data_in = 32'h3E99999A; // 0.3 in IEEE 754
        #10;
        $display("Test 4 - Small Positive Input: %h, Output: %h", data_in, data_out);

        // Test case 5: Small negative number
        #10;
        data_in = 32'hBE99999A; // -0.3 in IEEE 754
        #10;
        $display("Test 5 - Small Negative Input: %h, Output: %h", data_in, data_out);

        // Finish simulation
        #10;
        $finish;
    end
endmodule
