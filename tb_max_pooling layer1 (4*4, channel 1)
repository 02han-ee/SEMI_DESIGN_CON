`timescale 1ns / 1ps

module tb_max_pooling_layer1;

    // Parameters
    parameter IMAGE_WIDTH = 4;
    parameter IMAGE_HEIGHT = 4;
    parameter CHANNELS = 1;
    parameter POOL_WIDTH = 2;
    parameter POOL_HEIGHT = 2;
    parameter DATA_WIDTH = 32;
    parameter NUM_DATA = IMAGE_WIDTH * IMAGE_HEIGHT;  // 4x4 = 16개 데이터

    // Inputs
    reg clk;
    reg rst_n;
    reg valid_in;
    reg [DATA_WIDTH-1:0] data_in[0:NUM_DATA-1];

    // Outputs
    wire valid_out;
    wire [DATA_WIDTH-1:0] data_out[0:(IMAGE_HEIGHT/POOL_HEIGHT)*(IMAGE_WIDTH/POOL_WIDTH)-1];

    // Instantiate the Unit Under Test (UUT)
    max_pooling_layer1 #(
        .IMAGE_WIDTH(IMAGE_WIDTH),
        .IMAGE_HEIGHT(IMAGE_HEIGHT),
        .CHANNELS(CHANNELS),
        .POOL_WIDTH(POOL_WIDTH),
        .POOL_HEIGHT(POOL_HEIGHT),
        .DATA_WIDTH(DATA_WIDTH),
        .NUM_DATA(NUM_DATA)
    ) uut (
        .clk(clk),
        .rst_n(rst_n),
        .valid_in(valid_in),
        .data_in(data_in),
        .valid_out(valid_out),
        .data_out(data_out)
    );

    // Clock generation
    initial begin
        clk = 0;
        forever #5 clk = ~clk;  // 10 ns clock period
    end

    // Stimulus
    initial begin
        // Initialize Inputs
        rst_n = 0;
        valid_in = 0;
        // Reset the module
        #10;
        rst_n = 1;
        
        // Set input data (4x4 example)
        data_in[0] = 32'd1;
        data_in[1] = 32'd2;
        data_in[2] = 32'd3;
        data_in[3] = 32'd4;
        data_in[4] = 32'd5;
        data_in[5] = 32'd6;
        data_in[6] = 32'd7;
        data_in[7] = 32'd8;
        data_in[8] = 32'd9;
        data_in[9] = 32'd10;
        data_in[10] = 32'd11;
        data_in[11] = 32'd12;
        data_in[12] = 32'd13;
        data_in[13] = 32'd14;
        data_in[14] = 32'd15;
        data_in[15] = 32'd16;
        
        // Provide valid input
        #10;
        valid_in = 1;
        #10;
        valid_in = 0;
        
        // Wait for the output to stabilize
        #100;

        // Check the results (this is a simplified example; a real testbench would include checks)
        $finish;
    end

endmodule
