module max_pooling_layer1 #(
    parameter IMAGE_WIDTH = 26,
    parameter IMAGE_HEIGHT = 34,
    parameter CHANNELS = 32
)
(
    input wire clk,
    input wire rst_n,
    input wire [31:0] data_in [0:CHANNELS-1][0:IMAGE_WIDTH-1][0:IMAGE_HEIGHT-1], // (32, 26, 34)
    output wire [31:0] data_out[0:32*13*17-1] // (32, 13, 17)
);

    genvar i, j, k;
    generate
        for (i = 0; i < 32; i = i + 1) begin: channel
            for (j = 0; j < 13; j = j + 1) begin: row
                for (k = 0; k < 17; k = k + 1) begin: col
                    max_pooling max_pool (
                        .clk(clk),
                        .rst_n(rst_n),
                        .data_in0(data_in[(i*26*34) + (2*j*34) + 2*k]),
                        .data_in1(data_in[(i*26*34) + (2*j*34) + 2*k + 1]),
                        .data_in2(data_in[(i*26*34) + ((2*j+1)*34) + 2*k]),
                        .data_in3(data_in[(i*26*34) + ((2*j+1)*34) + 2*k + 1]),
                        .data_out(data_out[(i*13*17) + (j*17) + k])
                    );
                end
            end
        end
    endgenerate
endmodule
